{"version":3,"sources":["components/LoginComp.js","components/SignUp.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["LoginComp","props","useState","id","setId","pw","setPw","login","signUp","loginCheck","users","some","result","className","type","name","placeholder","onChange","e","target","value","onClick","alert","SignUp","signUpOpen","conPw","setConPw","overLap","overLapCheck","inputs","preventDefault","console","log","onCreate","ToDoList","toDos","setTodo","newToDo","setNewTodo","toDoList","map","todo","useCount","setUseCount","useEffect","document","querySelector","textContent","_useRef","useRef","toDo","ref","current","style","position","textAlign","action","width","height","backgroundColor","margin","display","justifyContent","cursor","FuncComp","numberState","initNumber","number","setNumber","Date","toString","_date","setDate","Math","ceil","random","ClassComp","state","date","this","setState","bind","React","Component","App","setLogin","setSignUp","setUsers","setInputs","user","userNum","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d6292d9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/LoginComp.css\";\r\n\r\nexport default function LoginComp(props) {\r\n\r\n  let [id, setId] = useState();\r\n  let [pw, setPw] = useState();\r\n\r\n  let login = props.login;\r\n  let signUp = props.signUp;\r\n\r\n  const idChange = (e) => {\r\n    setId(e.target.value);\r\n    \r\n  }\r\n  const pwChange = (e) => {\r\n    setPw(e.target.value);\r\n  }\r\n\r\n  const loginCheck = props.users.some(function (result) {\r\n    if(result.id === id && result.pw === pw){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n  });\r\n\r\n  const loginChecked = () => {\r\n\r\n    if (!id || !pw) {\r\n      alert(\"아이디 또는 비밀번호를 입력하시오.\");\r\n      return;\r\n    }\r\n    if (loginCheck) {\r\n      alert(\"로그인 성공!\");\r\n      login(true);\r\n    }\r\n    else {\r\n      alert(\"아이디와 비밀번호가 올바르지 않습니다.\");\r\n      setPw(\"\");\r\n    }\r\n  }\r\n  const signUpOpen = () => {\r\n    signUp(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-div\">\r\n        <div className=\"login-wrap\">\r\n          <span className=\"loginTitle\">로그인</span>\r\n          <input type=\"text\" id=\"id\" name=\"Id\" placeholder=\"id\" onChange={idChange}></input>\r\n          <input type=\"password\" id=\"pw\" name=\"Pw\" value = {pw} placeholder=\"password\" onChange={pwChange}></input>\r\n          <div className=\"btn-div\">\r\n            <input type=\"button\" id=\"btn\" value=\"로그인\" onClick={loginChecked} ></input>\r\n            <input type=\"button\" id=\"btn\" value=\"회원가입\" onClick={signUpOpen} ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport \"../css/SignUp.css\";\r\n\r\nexport default function SignUp(props) {\r\n\r\n  let signUpOpen = props.signUp;\r\n\r\n  let [conPw, setConPw] = useState();\r\n\r\n  const confirmPw = (e) => {\r\n    setConPw(e.target.value);\r\n  }\r\n\r\n  let overLap = \"\";\r\n\r\n  const overLapCheck = props.users.some((overLap) => {\r\n    return overLap.id === props.inputs.id;\r\n  })\r\n  const overLapCheck1 = (e) => {\r\n\r\n    e.preventDefault();\r\n    if (props.inputs.id === \"\") {\r\n      alert(\"아이디를 입력하세요.\");\r\n      return;\r\n    } if (overLapCheck || overLap === \"중복\") {\r\n      alert(\"중복된 아이디입니다.\")\r\n      overLap = \"중복\";\r\n      console.log(overLap)\r\n      return;\r\n    } else if (!overLapCheck) {\r\n      alert(\"사용가능한 아이디입니다.\")\r\n      overLap = \"사용가능\";\r\n      console.log(overLap)\r\n    }\r\n  }\r\n  const signUpChecked = (e) => {\r\n    e.preventDefault();\r\n    if (props.inputs.id === \"\" || props.inputs.pw === \"\") {\r\n      alert(\"아이디 또는 비밀번호를 입력하세요.\");\r\n      return;\r\n    }\r\n    if (props.inputs.pw !== conPw || conPw === \"\") {\r\n      alert(\"비밀번호를 확인하세요.\");\r\n\r\n      return;\r\n    } if (overLap === \"중복\") {\r\n      alert(\"아이디를 확인하세요.\")\r\n      console.log(overLap)\r\n    } if (overLap === \"\") {\r\n      alert(\"아이디 중복검사를 하세요.\")\r\n      console.log(overLap)\r\n\r\n    } else if (overLap === \"사용가능\") {\r\n      alert(\"가입완료\");\r\n      signUpOpen(false);\r\n      props.onCreate();\r\n      props.inputs.id = \"\"\r\n      props.inputs.pw = \"\"\r\n      console.log(overLap)\r\n\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"signUp-div\">\r\n      <span className=\"closeBtn\" onClick={() => {\r\n        signUpOpen(false);\r\n        props.inputs.id = \"\"\r\n        props.inputs.pw = \"\"\r\n      }}>close</span>\r\n      <span className=\"signUpTitle\">회원가입</span>\r\n      <form className=\"signUpForm\">\r\n        <div className=\"id-div\">\r\n          <input type=\"text\" id=\"signUpId\" name=\"id\" placeholder=\"ID\" onChange={props.onChange}></input>\r\n          <button onClick={overLapCheck1}>중복검사</button>\r\n        </div>\r\n        <input type=\"password\" id=\"signUpPw\" name=\"pw\" placeholder=\"PASSWORD\" onChange={props.onChange}></input>\r\n        <input type=\"password\" id=\"confirmPw\" name=\"confirmPw\" value={conPw} placeholder=\"CONFIRM PASSWORD\" onChange={confirmPw}></input>\r\n        <div className=\"btn-div\">\r\n          <input type=\"button\" id=\"signUpBtn\" value=\"가입하기\" onClick={signUpChecked}></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport '../css/ToDoList.css';\r\n\r\nexport default function ToDoList() {\r\n\r\n  let [toDos, setTodo] = useState([\"hook\", \"useEffect\", \"useRef\"]);\r\n  let [newToDo, setNewTodo] = useState();\r\n\r\n  const getValue = (e) => {\r\n    setNewTodo(e.target.value)\r\n  }\r\n  const listAdd = (e) => {\r\n    e.preventDefault()\r\n    if (!newToDo) {\r\n      alert(\"데이터를 입력하세요.\")\r\n      return;\r\n    }\r\n    setTodo([...toDos, newToDo]);\r\n  }\r\n  const toDoList = toDos.map(todo => <li>{todo}</li>)\r\n\r\n  let [useCount, setUseCount] = useState(1);\r\n  useEffect(() => {\r\n    setUseCount(useCount + 1);\r\n    document.querySelector(\".useEffectDiv\").textContent = `useEffect() ${useCount}번 실행`;\r\n  }, [toDos])\r\n\r\n  let _useRef = useRef();\r\n\r\n  const useRefController = () => {\r\n    _useRef.current.style = (\"width : 300px; height : 100px; background-color : green; color : white;\");\r\n  }\r\n  const useRefController1 = () => {\r\n    _useRef.current.style = (\"width : 300px; height : 100px; background-color : blue; color : white;\");\r\n  }\r\n\r\n  let toDo = useRef();\r\n\r\n  const reDesign = () => {\r\n    toDo.current.style = (\"display : flex; justify-content : center; flex-direction : row; algin-item : center\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"toDoList\" ref = {toDo}>\r\n      <button onClick = {reDesign} style = {{position : \"relative\"}}>디자인 변경</button>\r\n      <div style = {{textAlign : \"center\"}}>\r\n      <h2>TODO LIST</h2>\r\n      <div className=\"form-div\">\r\n        <form action=\"\">\r\n          <input id = \"toDo\"type=\"text\" onChange={getValue} />\r\n          <button onClick={listAdd}>할일 추가</button>\r\n          <ul>\r\n            <li>\r\n              {toDoList}\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n      </div>\r\n      <div className=\"useEffectDiv\" ref= {_useRef} style={{ width: \"300px\", height: \"100px\", backgroundColor: \"lightblue\" }}>\r\n\r\n      </div>\r\n      <div style={{ width: \"400px\", margin: \"20px\", display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <button style={{ cursor: \"pointer\" }} onClick={useRefController}>useRef로 div태그 컨트롤</button>\r\n        <button style={{ cursor: \"pointer\" }} onClick={useRefController1}>useRef로 div태그 컨트롤</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport LoginComp from \"./components/LoginComp\";\nimport SignUp from \"./components/SignUp\";\nimport ToDoList from \"./components/ToDoList\";\nimport \"./css/App.css\";\n\nfunction App() {\n\n  let [login, setLogin] = useState();\n  let [signUp, setSignUp] = useState();\n\n  const [users, setUsers] = useState([]);\n\n  const [inputs, setInputs] = useState({\n    id: \"\",\n    pw: \"\",\n  });\n\n  const onChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  const onCreate = () => {\n    const user = {\n      userNum: users.length + 1,\n      id: inputs.id,\n      pw: inputs.pw,\n\n    };\n    setUsers([...users, user]);\n  };\n\n  if (!login) {\n    return (\n      <div className=\"App\">\n        <LoginComp\n          login={setLogin}\n          signUp={setSignUp}\n          users={users} />\n\n        {signUp === true && (\n          <SignUp\n            onChange={onChange}\n            onCreate={onCreate}\n            users={users}\n            inputs={inputs}\n            signUp={setSignUp}/>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container\">\n        <h1>Welcome to React!</h1>\n        <h1 className=\"logout\" onClick={() => {\n          setLogin(false)\n        }}>logout</h1>\n        <FuncComp initNumber={2}/>\n        <ClassComp initNumber={2}/>\n        <ToDoList/>\n      </div>\n    );\n  }\n}\n\nfunction FuncComp(props) {\n  let numberState = useState(props.initNumber);\n  let number = numberState[0];\n  let setNumber = numberState[1];\n\n  // let dateState = useState((new Date()).toString());\n  // let _date = dateState[0];\n  // let setDate = dateState[1];\n  let [_date, setDate] = useState((new Date()).toString());\n  return (\n    <div className=\"container\">\n      <h2>function style Component</h2>\n      <p>Number : {number}</p>\n      <p>Date : {_date}</p>\n      <input type=\"button\" value=\"random\" onClick={\n        function () {\n          setNumber(Math.ceil(Math.random() * 100));\n        }\n      }></input>\n      <input type=\"button\" value=\"date\" onClick={\n        function () {\n          setDate((new Date()).toString());\n        }\n      }></input>\n    </div>\n  );\n}\nclass ClassComp extends React.Component {\n  state = {\n    number: this.props.initNumber,\n    date: (new Date()).toString()\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h2> class style Component </h2>\n        <p> Number : {this.state.number}</p>\n        <p> Date : {this.state.date}</p>\n\n        <input type=\"button\" value=\"random\" onClick={\n          () => {\n            this.setState({ number: Math.ceil(Math.random() * 100) })\n          }\n        }></input>\n        <input type=\"button\" value=\"date\" onClick={\n          function () {\n            this.setState({ date: (new Date()).toString() })\n          }.bind(this)\n        }></input>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}