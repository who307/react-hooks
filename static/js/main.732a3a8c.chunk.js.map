{"version":3,"sources":["components/LoginComp.js","components/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["LoginComp","props","users","id","pw","useState","setId","setPw","login","signUp","className","type","name","placeholder","value","onChange","e","target","onClick","alert","SignUp","conPw","FuncComp","numberState","initNumber","number","setNumber","Date","toString","_date","setDate","Math","ceil","random","ClassComp","state","date","this","setState","bind","React","Component","App","setLogin","setSignUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.732a3a8c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/LoginComp.css\";\r\n\r\nexport default function LoginComp(props) {\r\n  const users = {\r\n    id: props.id,\r\n    password: props.pw\r\n  }\r\n  let [id, setId] = useState();\r\n  let [pw, setPw] = useState();\r\n\r\n  let login = props.login;\r\n  let signUp = props.signUp;\r\n\r\n  const idChange = (e) => {\r\n    setId(e.target.value);\r\n  }\r\n  const pwChange = (e) => {\r\n    setPw(e.target.value);\r\n  }\r\n\r\n  const loginChecked = () => {\r\n    if (!id || !pw) {\r\n      alert(\"아이디 또는 비밀번호를 입력하시오.\");\r\n      return;\r\n    }\r\n    if (id === users.id && pw === users.password) {\r\n      alert(\"로그인 성공!\");\r\n      login(true);\r\n    } else {\r\n      alert(\"아이디와 비밀번호를 확인하세요.\");\r\n      setPw(\"\");\r\n    }\r\n  }\r\n  const signUpOpen = () => {\r\n    signUp(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-div\">\r\n        <div className=\"login-wrap\">\r\n          <span className=\"loginTitle\">로그인</span>\r\n          <input type=\"text\" id=\"id\" name=\"Id\" placeholder=\"id\" value={id} onChange={idChange}></input>\r\n          <input type=\"password\" id=\"pw\" name=\"Pw\" placeholder=\"password\" value={pw} onChange={pwChange}></input>\r\n          <div className=\"btn-div\">\r\n            <input type=\"button\" id=\"btn\" value=\"로그인\" onClick={loginChecked} ></input>\r\n            <input type=\"button\" id=\"btn\" value=\"회원가입\" onClick={signUpOpen} ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport \"../css/SignUp.css\";\r\n\r\nexport default function SignUp(props) {\r\n\r\n  let conPw;\r\n  let signUp = props.signUp;\r\n\r\n  const confirmPw = (e) => {\r\n    conPw = e.target.value;\r\n  }\r\n  const signUpChecked = () => {\r\n    if(!props.id || !props.pw){\r\n      alert(\"아이디 또는 비밀번호를 입력하시오.\");\r\n      return;\r\n    }\r\n    if (props.pw !== conPw) {\r\n      alert(\"비밀번호를 확인하세요.\");\r\n    }else{\r\n      alert(\"가입완료\");\r\n      signUp(false);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"signUp-div\">\r\n      <span className =\"closeBtn\" onClick ={()=>{\r\n        signUp(false);\r\n      }}>close</span>\r\n      <span className =\"signUpTitle\">회원가입</span>\r\n      <input type=\"text\" id=\"signUpId\" name=\"id\" placeholder=\"ID\" value={props.id} onChange={props.setId}></input>\r\n      <input type=\"password\" id=\"signUpPw\" name=\"pw\" value={props.pw} placeholder=\"PASSWORD\" onChange={props.setPw} ></input>\r\n      <input type=\"password\" id=\"confirmPw\" name=\"confirmPw\" placeholder=\"CONFIRM PASSWORD\" onChange={confirmPw}></input>\r\n      <div className=\"btn-div\">\r\n        <input type=\"button\" id=\"signUpBtn\" value=\"가입하기\" onClick={signUpChecked}></input>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\nimport LoginComp from \"./components/LoginComp\";\nimport SignUp from \"./components/SignUp\";\nimport \"./css/App.css\";\n\nfunction App() {\n\n  let [id, setId] = useState();\n  let [pw, setPw] = useState();\n  let [login, setLogin] = useState();\n  let [signUp, setSignUp] = useState();\n\n  const singUpId = (e) => {\n    setId(e.target.value);\n  };\n  const singUpPw = (e) => {\n    setPw(e.target.value);\n  };\n  \n  if (!login) {\n    return (\n      <div className=\"App\">\n        <LoginComp\n          login={setLogin}\n          signUp={setSignUp}\n          id={id}\n          pw={pw}>\n        </LoginComp>\n        {signUp === true && (\n          <SignUp\n            id={id}\n            pw={pw}\n            setId={singUpId}\n            setPw={singUpPw}\n            signUp={setSignUp}>\n          </SignUp>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container\">\n        <h1>Welcome to React!</h1>\n        <h1 className =\"logout\" onClick = {() =>{\n          setLogin(false)\n        }}>logout</h1>\n        <FuncComp initNumber={2}></FuncComp>\n        <ClassComp initNumber={2}></ClassComp>\n      </div>\n    );\n  }\n}\n\nfunction FuncComp(props) {\n  let numberState = useState(props.initNumber);\n  let number = numberState[0];\n  let setNumber = numberState[1];\n\n  // let dateState = useState((new Date()).toString());\n  // let _date = dateState[0];\n  // let setDate = dateState[1];\n  let [_date, setDate] = useState((new Date()).toString());\n  return (\n    <div className=\"container\">\n      <h2>function style Component</h2>\n      <p>Number : {number}</p>\n      <p>Number : {_date}</p>\n      <input type=\"button\" value=\"random\" onClick={\n        function () {\n          setNumber(Math.ceil(Math.random() * 100));\n        }\n      }></input>\n      <input type=\"button\" value=\"date\" onClick={\n        function () {\n          setDate((new Date()).toString());\n        }\n      }></input>\n    </div>\n  );\n}\nclass ClassComp extends React.Component {\n  state = {\n    number: this.props.initNumber,\n    date: (new Date()).toString()\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h2> class style Component </h2>\n        <p> Number : {this.state.number}</p>\n        <p> Date : {this.state.date}</p>\n\n        <input type=\"button\" value=\"random\" onClick={\n          () => {\n            this.setState({ number: Math.ceil(Math.random() * 100) })\n          }\n        }></input>\n        <input type=\"button\" value=\"date\" onClick={\n          function () {\n            this.setState({ date: (new Date()).toString() })\n          }.bind(this)\n        }></input>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}