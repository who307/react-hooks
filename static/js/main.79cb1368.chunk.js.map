{"version":3,"sources":["components/LoginComp.js","components/SignUp.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["LoginComp","props","useState","id","setId","pw","setPw","className","type","name","placeholder","onChange","e","target","value","onClick","loginCheck","users","some","result","loginData","map","join","alert","setLoginData","loginOpen","signUpOpen","SignUp","inputs","setInputs","preventDefault","console","log","overLap","overLapCheck","conPw","setConPw","user","userNum","length","setUsers","onCreate","ToDoList","toDos","setTodo","newToDo","setNewTodo","toDoList","todo","useCount","setUseCount","useEffect","document","querySelector","textContent","changeCheck","_useRef","useRef","reDesign","ref","current","style","position","textAlign","action","width","height","backgroundColor","margin","display","justifyContent","cursor","FuncComp","numberState","initNumber","number","setNumber","Date","toString","_date","setDate","Math","ceil","random","ClassComp","state","date","this","setState","bind","React","Component","App","login","setLogin","signUp","setSignUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79cb1368.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/LoginComp.css\";\r\n\r\nexport default function LoginComp(props) {\r\n\r\n  let [id, setId] = useState();\r\n  let [pw, setPw] = useState();\r\n\r\n  const idChange = (e) => {\r\n    setId(e.target.value);\r\n  }\r\n  const pwChange = (e) => {\r\n    setPw(e.target.value);\r\n  }\r\n\r\n  const loginChecked = () => {\r\n\r\n    const loginCheck = props.users.some((result) => (result.id === id && result.pw === pw));\r\n\r\n    let loginData = props.users.map((result) => {\r\n      if (result.id === id && result.pw === pw) {\r\n        return result.id;\r\n      }\r\n    }).join(\"\"); \r\n    if (!id || !pw) {\r\n      alert(\"아이디 또는 비밀번호를 입력하시오.\");\r\n      return;\r\n    }\r\n    if (loginCheck) {\r\n      alert(`환영합니다. ${loginData} 님`);\r\n      props.setLoginData(loginData)\r\n      props.loginOpen(true);\r\n    }\r\n    else {\r\n      alert(\"아이디와 비밀번호가 올바르지 않습니다.\");\r\n      setPw(\"\");\r\n    }\r\n  }\r\n  const signOpen = () => {\r\n    props.signUpOpen(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-div\">\r\n        <div className=\"login-wrap\">\r\n          <span className=\"loginTitle\">로그인</span>\r\n          <input type=\"text\" id=\"id\" name=\"Id\" placeholder=\"id\" onChange={idChange}></input>\r\n          <input type=\"password\" id=\"pw\" name=\"Pw\" placeholder=\"password\" onChange={pwChange}></input>\r\n          <div className=\"btn-div\">\r\n            <input type=\"button\" id=\"btn\" value=\"로그인\" onClick={loginChecked} ></input>\r\n            <input type=\"button\" id=\"btn\" value=\"회원가입\" onClick={signOpen} ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport \"../css/SignUp.css\";\r\n\r\nexport default function SignUp(props) {\r\n\r\n  // 인풋에 입력한 데이터 가져오기\r\n  const [inputs, setInputs] = useState({\r\n    id: \"\",\r\n    pw: \"\",\r\n  });\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    const { name, value } = e.target;\r\n    setInputs({\r\n      ...inputs,\r\n      [name]: value\r\n    });\r\n    console.log(`over : ${overLap}`)\r\n  };\r\n\r\n  // 회원가입시 입력한 데이터 객체 배열 생성\r\n  const onCreate = () => {\r\n    const user = {\r\n      userNum: props.users.length + 1,\r\n      id: inputs.id,\r\n      pw: inputs.pw,\r\n    };\r\n    props.setUsers([...props.users, user]);\r\n  };\r\n  let overLap = true;\r\n  // App컴포넌트에서 유저정보를 props로 전달받아 입력한 아이디 값과 props의 아이디값이 중복되는지 체크\r\n  const overLapCheck =props.users.some((result) => {\r\n    return result.id === inputs.id;\r\n  })\r\n  // 비밀번호 확인\r\n  let [conPw, setConPw] = useState();\r\n  const confirmPw = (e) => {\r\n    e.preventDefault();\r\n    setConPw(e.target.value);\r\n  }\r\n  const overLapCheck1 = (e) => {\r\n    e.preventDefault();\r\n    if (inputs.id === \"\") {\r\n      alert(\"아이디를 입력하세요.\");\r\n      return;\r\n    } if (overLapCheck) {\r\n      alert(\"이미 존재하는 아이디입니다.\")\r\n      overLap = true;\r\n      console.log(`over : ${overLap}`)\r\n      return;\r\n    } else if (!overLapCheck) {\r\n      alert(\"사용가능한 아이디입니다.\")\r\n      overLap = false;\r\n      console.log(`over : ${overLap}`)\r\n    }\r\n  }\r\n  const signUpChecked = (e) => {\r\n    e.preventDefault();\r\n    if (inputs.id === \"\" || inputs.pw === \"\") {\r\n      alert(\"아이디 또는 비밀번호를 입력하세요.\");\r\n      return;\r\n    }\r\n    if (inputs.pw !== conPw || conPw === \"\") {\r\n      alert(\"비밀번호를 확인하세요.\");\r\n      return;\r\n    }if (overLap === true) {\r\n      alert(\"아이디 중복검사를 하세요.\")\r\n      return;\r\n\r\n    } else if (overLap === false) {\r\n      alert(\"가입완료\");\r\n      props.signUpOpen(false);\r\n      onCreate();\r\n      inputs.id = \"\"\r\n      inputs.pw = \"\"\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"signUp-div\">\r\n      <span className=\"closeBtn\" onClick={() => {\r\n        props.signUpOpen(false);\r\n        inputs.id = \"\"\r\n        inputs.pw = \"\"\r\n      }}>close</span>\r\n      <span className=\"signUpTitle\">회원가입</span>\r\n      <form className=\"signUpForm\">\r\n        <div className=\"id-div\">\r\n          <input type=\"text\" id=\"signUpId\" name=\"id\" placeholder=\"ID\" onChange={onChange}></input>\r\n          <button onClick={overLapCheck1}>중복검사</button>\r\n        </div>\r\n        <input type=\"password\" id=\"signUpPw\" name=\"pw\" placeholder=\"PASSWORD\" onChange={onChange}></input>\r\n        <input type=\"password\" id=\"confirmPw\" name=\"confirmPw\" value={conPw} placeholder=\"CONFIRM PASSWORD\" onChange={confirmPw}></input>\r\n        <div className=\"btn-div\">\r\n          <input type=\"button\" id=\"signUpBtn\" value=\"가입하기\" onClick={signUpChecked}></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useRef } from 'react';\r\nimport '../css/ToDoList.css';\r\n\r\nexport default function ToDoList() {\r\n\r\n  let [toDos, setTodo] = useState([\"hook\", \"useEffect\", \"useRef\"]);\r\n  let [newToDo, setNewTodo] = useState();\r\n\r\n  const getValue = (e) => {\r\n    setNewTodo(e.target.value)\r\n  }\r\n  const listAdd = (e) => {\r\n    e.preventDefault()\r\n    if (!newToDo) {\r\n      alert(\"데이터를 입력하세요.\")\r\n      return;\r\n    }\r\n    setTodo([...toDos, newToDo]);\r\n  }\r\n  const toDoList = toDos.map(todo => <li>{todo}</li>)\r\n\r\n  let [useCount, setUseCount] = useState(1);\r\n  useEffect(() => {\r\n    setUseCount(useCount + 1);\r\n    document.querySelector(\".useEffectDiv\").textContent = `useEffect() ${useCount}번 실행`;\r\n  }, [toDos])\r\n\r\n  let _useRef = useRef();\r\n\r\n  const useRefController = () => {\r\n    _useRef.current.style = (\"width : 300px; height : 100px; background-color : green; color : white;\");\r\n  }\r\n  const useRefController1 = () => {\r\n    _useRef.current.style = (\"width : 300px; height : 100px; background-color : blue; color : white;\");\r\n  }\r\n\r\n  let reDesign = useRef();\r\n  let changeCheck;\r\n  const designChange = () => {\r\n    if(!changeCheck){\r\n      changeCheck = true;\r\n      reDesign.current.style = (\"display : flex; justify-content : center; flex-direction : row; algin-item : center\");\r\n  }else{\r\n    reDesign.current.style = (\"display : flex; justify-content : center; flex-direction : column; algin-item : center\");\r\n    changeCheck = false;\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"toDoList\" ref={reDesign}>\r\n      <button onClick={designChange} style={{ position: \"relative\" }}>useRef 디자인 변경</button>\r\n      <div style={{ textAlign: \"center\" }}>\r\n        <h2>TODO LIST</h2>\r\n        <div className=\"form-div\">\r\n          <form action=\"\">\r\n            <input id=\"toDo\" type=\"text\" onChange={getValue} />\r\n            <button onClick={listAdd}>할일 추가</button>\r\n            <ul>\r\n              <li>\r\n                {toDoList}\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div className=\"useEffectDiv\" ref={_useRef} style={{ width: \"300px\", height: \"100px\", backgroundColor: \"lightblue\" }}>\r\n\r\n      </div>\r\n      <div style={{ width: \"400px\", margin: \"20px\", display: \"flex\", justifyContent: \"space-around\" }}>\r\n        <button style={{ cursor: \"pointer\" }} onClick={useRefController}>useRef 컨트롤</button>\r\n        <button style={{ cursor: \"pointer\" }} onClick={useRefController1}>useRef 컨트롤</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\nimport LoginComp from \"./components/LoginComp\";\nimport SignUp from \"./components/SignUp\";\nimport ToDoList from \"./components/ToDoList\";\nimport \"./css/App.css\";\n\nfunction App() {\n  // 로그인창 온오프\n  let [login, setLogin] = useState(false);\n\n  // 회원가입창 온오프\n  let [signUp, setSignUp] = useState(false);\n\n  // 회원가입시 입력한 데이터 객체 배열\n  const [users, setUsers] = useState([]);\n\n  // 로그인된 회원아이디 데이터 가져오기\n  let [loginData, setLoginData] = useState();\n\n\n  if (!login) {\n    return (\n      <div className=\"App\">\n        <LoginComp\n          loginOpen={setLogin}\n          signUpOpen={setSignUp}\n          users={users}\n          setLoginData={setLoginData} />\n\n        {signUp === true && (\n          <SignUp\n            setUsers={setUsers}\n            users={users}\n            signUpOpen={setSignUp}\n          />\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"container\">\n        <h1>Welcome to React!</h1>\n\n        <div className=\"loginData\">\n          <span>ID : {loginData} </span>\n          <span className=\"logoutText\" onClick={() => {\n            setLogin(false)\n          }}>Logout</span>\n        </div>\n        <FuncComp initNumber={2} />\n        <ClassComp initNumber={2} />\n        <ToDoList />\n      </div>\n    );\n  }\n}\n\nfunction FuncComp(props) {\n  let numberState = useState(props.initNumber);\n  let number = numberState[0];\n  let setNumber = numberState[1];\n\n  // let dateState = useState((new Date()).toString());\n  // let _date = dateState[0];\n  // let setDate = dateState[1];\n  let [_date, setDate] = useState((new Date()).toString());\n  return (\n    <div className=\"container\">\n      <h2>function style Component</h2>\n      <p>Number : {number}</p>\n      <p>Date : {_date}</p>\n      <input type=\"button\" value=\"random\" onClick={\n        function () {\n          setNumber(Math.ceil(Math.random() * 100));\n        }\n      }></input>\n      <input type=\"button\" value=\"date\" onClick={\n        function () {\n          setDate((new Date()).toString());\n        }\n      }></input>\n    </div>\n  );\n}\nclass ClassComp extends React.Component {\n  state = {\n    number: this.props.initNumber,\n    date: (new Date()).toString()\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h2> class style Component </h2>\n        <p> Number : {this.state.number}</p>\n        <p> Date : {this.state.date}</p>\n\n        <input type=\"button\" value=\"random\" onClick={\n          () => {\n            this.setState({ number: Math.ceil(Math.random() * 100) })\n          }\n        }></input>\n        <input type=\"button\" value=\"date\" onClick={\n          function () {\n            this.setState({ date: (new Date()).toString() })\n          }.bind(this)\n        }></input>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}